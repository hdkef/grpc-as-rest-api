// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: auth/update_auth.proto

package auth

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	UpdateAuthService_UpdateAuth_FullMethodName = "/UpdateAuthService/UpdateAuth"
)

// UpdateAuthServiceClient is the client API for UpdateAuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UpdateAuthServiceClient interface {
	UpdateAuth(ctx context.Context, in *UpdateAuthRequest, opts ...grpc.CallOption) (*UpdateAuthResponse, error)
}

type updateAuthServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUpdateAuthServiceClient(cc grpc.ClientConnInterface) UpdateAuthServiceClient {
	return &updateAuthServiceClient{cc}
}

func (c *updateAuthServiceClient) UpdateAuth(ctx context.Context, in *UpdateAuthRequest, opts ...grpc.CallOption) (*UpdateAuthResponse, error) {
	out := new(UpdateAuthResponse)
	err := c.cc.Invoke(ctx, UpdateAuthService_UpdateAuth_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpdateAuthServiceServer is the server API for UpdateAuthService service.
// All implementations should embed UnimplementedUpdateAuthServiceServer
// for forward compatibility
type UpdateAuthServiceServer interface {
	UpdateAuth(context.Context, *UpdateAuthRequest) (*UpdateAuthResponse, error)
}

// UnimplementedUpdateAuthServiceServer should be embedded to have forward compatible implementations.
type UnimplementedUpdateAuthServiceServer struct {
}

func (UnimplementedUpdateAuthServiceServer) UpdateAuth(context.Context, *UpdateAuthRequest) (*UpdateAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuth not implemented")
}

// UnsafeUpdateAuthServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UpdateAuthServiceServer will
// result in compilation errors.
type UnsafeUpdateAuthServiceServer interface {
	mustEmbedUnimplementedUpdateAuthServiceServer()
}

func RegisterUpdateAuthServiceServer(s grpc.ServiceRegistrar, srv UpdateAuthServiceServer) {
	s.RegisterService(&UpdateAuthService_ServiceDesc, srv)
}

func _UpdateAuthService_UpdateAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpdateAuthServiceServer).UpdateAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: UpdateAuthService_UpdateAuth_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpdateAuthServiceServer).UpdateAuth(ctx, req.(*UpdateAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UpdateAuthService_ServiceDesc is the grpc.ServiceDesc for UpdateAuthService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UpdateAuthService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "UpdateAuthService",
	HandlerType: (*UpdateAuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateAuth",
			Handler:    _UpdateAuthService_UpdateAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth/update_auth.proto",
}
